/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sofrecom.ui;

import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author z.benrhouma
 */
public class ViewModelBuilder extends javax.swing.JInternalFrame {

    final DefaultListModel selectionListModel = new DefaultListModel();
    final DefaultListModel scanListModel = new DefaultListModel();
    public static String eclipseModelDirectory ="E:\\DevSrc\\AcceleoEclipseSteamProject\\model\\";

    /**
     * Creates new form DTOLoader
     */
    public ViewModelBuilder() {
        initComponents();
        this.loadUIConfiguration();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        choice = new javax.swing.ButtonGroup();
        selectedObject = new java.lang.Object();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        tableNamelabel1 = new javax.swing.JLabel();
        outpathTextField = new javax.swing.JTextField();
        cutomizeOutPathButton = new javax.swing.JButton();
        dtoValueLabel = new javax.swing.JLabel();
        defaultDtoInputtext = new javax.swing.JTextField();
        simpleDtoRardioBtn = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        multipleDtoConfigurationPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        scanList = new javax.swing.JList();
        addBtn = new javax.swing.JButton();
        removeBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        selectionList = new javax.swing.JList();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        generateViewModelBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("View Model Builder");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setBackground(new java.awt.Color(255, 250, 250));
        jPanel1.setPreferredSize(new java.awt.Dimension(0, 50));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("You Shoul Generate DTO .classe files before you can load View Model the source file.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);

        jSeparator1.setPreferredSize(new java.awt.Dimension(1, 1));
        getContentPane().add(jSeparator1);

        jPanel2.setPreferredSize(new java.awt.Dimension(650, 400));

        tableNamelabel1.setText("Class Directory Path");

        outpathTextField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                outpathTextFieldCaretUpdate(evt);
            }
        });

        cutomizeOutPathButton.setText("...");
        cutomizeOutPathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutomizeOutPathButtonActionPerformed(evt);
            }
        });

        dtoValueLabel.setText("DTO full name");

        defaultDtoInputtext.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                defaultDtoInputtextCaretUpdate(evt);
            }
        });

        choice.add(simpleDtoRardioBtn);
        simpleDtoRardioBtn.setSelected(true);
        simpleDtoRardioBtn.setText("DTO");
        simpleDtoRardioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpleDtoRardioBtnActionPerformed(evt);
            }
        });

        choice.add(jRadioButton2);
        jRadioButton2.setText("Multiple DTO(s)");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jScrollPane2.setToolTipText("Selection List");
        jScrollPane2.setName("DD"); // NOI18N

        scanList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, selectedObject, org.jdesktop.beansbinding.ObjectProperty.create(), scanList, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        scanList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                scanListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(scanList);

        addBtn.setText(">");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        removeBtn.setText("<");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(selectionList);

        javax.swing.GroupLayout multipleDtoConfigurationPanelLayout = new javax.swing.GroupLayout(multipleDtoConfigurationPanel);
        multipleDtoConfigurationPanel.setLayout(multipleDtoConfigurationPanelLayout);
        multipleDtoConfigurationPanelLayout.setHorizontalGroup(
            multipleDtoConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(multipleDtoConfigurationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(multipleDtoConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        multipleDtoConfigurationPanelLayout.setVerticalGroup(
            multipleDtoConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(multipleDtoConfigurationPanelLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(multipleDtoConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, multipleDtoConfigurationPanelLayout.createSequentialGroup()
                        .addGroup(multipleDtoConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, multipleDtoConfigurationPanelLayout.createSequentialGroup()
                        .addComponent(addBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeBtn)
                        .addGap(101, 101, 101))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tableNamelabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(dtoValueLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(simpleDtoRardioBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(outpathTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                            .addComponent(defaultDtoInputtext, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cutomizeOutPathButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(122, 122, 122))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(multipleDtoConfigurationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outpathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cutomizeOutPathButton)
                    .addComponent(tableNamelabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simpleDtoRardioBtn)
                    .addComponent(jRadioButton2))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dtoValueLabel)
                    .addComponent(defaultDtoInputtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(multipleDtoConfigurationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);

        jSeparator2.setPreferredSize(new java.awt.Dimension(1, 1));
        getContentPane().add(jSeparator2);

        jPanel3.setMaximumSize(new java.awt.Dimension(32767, 55));
        jPanel3.setPreferredSize(new java.awt.Dimension(0, 55));

        generateViewModelBtn.setText("Ok");
        generateViewModelBtn.setEnabled(false);
        generateViewModelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateViewModelBtnActionPerformed(evt);
            }
        });

        jButton2.setText("Annuler");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(453, Short.MAX_VALUE)
                .addComponent(generateViewModelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(generateViewModelBtn))
                .addGap(17, 17, 17))
        );

        getContentPane().add(jPanel3);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateViewModelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateViewModelBtnActionPerformed
        Configuration.setProperty(Configuration.LastUsedClassPath, outpathTextField.getText());
        Configuration.saveConfiguration();

        if (simpleDtoRardioBtn.isSelected()) {
            final String str = this.defaultDtoInputtext.getText();

            XmiFormatter xmiFormatter = new XmiFormatter(new String[]{getEntityName(str)}, getBasePackage(str), this.outpathTextField.getText());
            xmiFormatter.buildAndSaveViewModel();
        } else {
            String[] entities = new String[this.selectionListModel.size()];
            for (int i = 0; i < this.selectionListModel.size(); i++) {
                entities[i] = this.selectionListModel.get(i).toString().replaceAll(".class", "");
            }
            XmiFormatter xmiFormatter = new XmiFormatter(entities, Configuration.getProperty(Configuration.JavaModelTargetPathField), this.outpathTextField.getText());
            xmiFormatter.buildAndSaveViewModel();
        }
        JOptionPane.showMessageDialog(rootPane, "XMI view model file is generated successfully\nYou can modify the file in the eclipse IDE or generate the playframework componenets directely from WebCodeGen interface");

    }//GEN-LAST:event_generateViewModelBtnActionPerformed
    private String getBasePackage(String str) {
        final Pattern pattern = Pattern.compile("(.*)\\.");
        final Matcher matcher = pattern.matcher(str);
        matcher.find();
        return matcher.group(1);
    }

    private String getEntityName(String str) {
        final Pattern pattern = Pattern.compile("(\\.[^..]*)$");
        final Matcher matcher = pattern.matcher(str);
        if (matcher.find()) {
            return matcher.group(1).substring(1);
        }
        return str;
    }    private void checkConfiguration() {
        if (simpleDtoRardioBtn.isSelected()) {

            if (verifyDtoExistance()) {
                this.generateViewModelBtn.setEnabled(true);
            } else {
                this.generateViewModelBtn.setEnabled(false);
            }
        } else {
            if (!verifyClassesDireectory()) {
                this.generateViewModelBtn.setEnabled(false);
            } else {
                if (!selectionListModel.isEmpty()) {
                    this.generateViewModelBtn.setEnabled(true);
                } else {
                    this.generateViewModelBtn.setEnabled(false);
                }
            }
        }

    }

    /**
     *
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        // TODO add your handling code here:

        scanListModel.addElement(selectionListModel.get(selectionList.getSelectedIndex()));
        selectionListModel.removeElement(selectionListModel.get(selectionList.getSelectedIndex()));
        scanList.updateUI();
        selectionList.updateUI();
        checkConfiguration();
    }//GEN-LAST:event_removeBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        selectionListModel.addElement(scanListModel.get(scanList.getSelectedIndex()));
        scanListModel.removeElement(scanListModel.get(scanList.getSelectedIndex()));
        scanList.updateUI();
        selectionList.updateUI();
        checkConfiguration();
    }//GEN-LAST:event_addBtnActionPerformed

    private void scanListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_scanListValueChanged

    }//GEN-LAST:event_scanListValueChanged

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        if (verifyClassesDireectory()) {
            initListBoxs();
        }
        this.showMutilpleDtoConfiguration();
        this.checkConfiguration();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void simpleDtoRardioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpleDtoRardioBtnActionPerformed
        // TODO add your handling code here:
        this.loadUIConfiguration();
        this.showSimpleConfiguration();
    }//GEN-LAST:event_simpleDtoRardioBtnActionPerformed

    private void defaultDtoInputtextCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_defaultDtoInputtextCaretUpdate
        // TODO add your handling code here:
        this.checkConfiguration();
    }//GEN-LAST:event_defaultDtoInputtextCaretUpdate

    private void cutomizeOutPathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutomizeOutPathButtonActionPerformed

        final File directoryChoice = this.getDirectoryChoice(this, Configuration.getProperty(Configuration.LastUsedOutputpath), "Choose output directory");
        if (directoryChoice != null) {
            this.outpathTextField.setText(directoryChoice.getAbsolutePath());
        }
    }//GEN-LAST:event_cutomizeOutPathButtonActionPerformed

    private void outpathTextFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_outpathTextFieldCaretUpdate
        // TODO add your handling code here:
        checkConfiguration();
    }//GEN-LAST:event_outpathTextFieldCaretUpdate
    public void showSimpleConfiguration() {
        this.defaultDtoInputtext.setVisible(true);
        this.dtoValueLabel.setVisible(true);
        this.multipleDtoConfigurationPanel.setVisible(false);

    }

    public void showMutilpleDtoConfiguration() {
        this.defaultDtoInputtext.setVisible(false);
        this.dtoValueLabel.setVisible(false);
        this.multipleDtoConfigurationPanel.setVisible(true);
    }
    public File getDirectoryChoice(Component owner, String defaultDirectory, String title) {
        final SecurityManager sm = System.getSecurityManager();
        final JFileChooser chooser = new JFileChooser();
        File choiceFile = null;

        System.setSecurityManager(null);
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        final File defaultDir = new File(defaultDirectory);
        if (defaultDir.exists() && defaultDir.isDirectory()) {
            chooser.setCurrentDirectory(defaultDir);
            chooser.setSelectedFile(defaultDir);
        }
        chooser.setDialogTitle(title);
        chooser.setApproveButtonText("OK");
        final int choice = chooser.showOpenDialog(owner);
        owner.requestFocus();
        switch (choice) {
            case JFileChooser.APPROVE_OPTION:
                if (chooser.getSelectedFile() != null) {
                    if (chooser.getSelectedFile().exists()) {
                        choiceFile = chooser.getSelectedFile();
                        Configuration.setProperty(Configuration.LastUsedClassPath, choiceFile.getAbsolutePath());
                    } else {
                        File parentFile = new File(chooser.getSelectedFile().getParent());
                        choiceFile = parentFile;
                    }
                }
                break;
            case JFileChooser.CANCEL_OPTION:
            case JFileChooser.ERROR_OPTION:
        }
        chooser.removeAll();
        System.setSecurityManager(sm);

        return choiceFile;
    }

    private void loadUIConfiguration() {
        Configuration.loadConfiguration();
        this.outpathTextField.setText(Configuration.getProperty(Configuration.LastUsedClassPath));
        loadDtoConfiguration();
        this.multipleDtoConfigurationPanel.setVisible(false);

    }

    void loadDtoConfiguration() {
        String lastUsedTablename = Configuration.getProperty(Configuration.LastUsedTableName);
        // if the first character is a lower case 
        this.defaultDtoInputtext.setText(Configuration.getProperty(Configuration.JavaModelTargetPathField) + "." + CommonUtils.upperFirstLetterAfterUnderscore(lastUsedTablename));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.ButtonGroup choice;
    private javax.swing.JButton cutomizeOutPathButton;
    private javax.swing.JTextField defaultDtoInputtext;
    private javax.swing.JLabel dtoValueLabel;
    private javax.swing.JButton generateViewModelBtn;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel multipleDtoConfigurationPanel;
    private javax.swing.JTextField outpathTextField;
    private javax.swing.JButton removeBtn;
    private javax.swing.JList scanList;
    private java.lang.Object selectedObject;
    private javax.swing.JList selectionList;
    private javax.swing.JRadioButton simpleDtoRardioBtn;
    private javax.swing.JLabel tableNamelabel1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    /**
     * detect if the given directory in the output path is a classes directory
     */
    private boolean verifyClassesDireectory() {

        this.outpathTextField.setBackground(new Color(255, 204, 204));
        final File classDirectory = new File(this.outpathTextField.getText());
        if (classDirectory.exists() && classDirectory.getAbsolutePath().endsWith("classes")) {
            // detect if the applicationConfig file is present to qualify the directory as a play application directoy or not
            final File configFile = new File(this.outpathTextField.getText() + "/application.conf");
            if (configFile.exists()) {
                this.outpathTextField.setBackground(new Color(153, 255, 153));
                return true;
            } else {
                JOptionPane.showMessageDialog(rootPane, "This directory doesen't seem to be a valid playframework application");
                this.outpathTextField.setBackground(new Color(255, 204, 204));
                return false;
            }
        } else {
            return false;
        }
    }

    private boolean verifyDtoExistance() {
        this.defaultDtoInputtext.setBackground(new Color(255, 204, 204));
        if (!verifyClassesDireectory()) {
            return false;
        }
        final String filename = String.format("%s/%s.class", this.outpathTextField.getText(), this.defaultDtoInputtext.getText().replaceAll("\\.", "/"));

        final File dtoFile = new File(filename);
        if (dtoFile.exists()) {
            this.defaultDtoInputtext.setBackground(new Color(153, 255, 153));
            return true;
        } else {
            System.out.println("---false");
            this.defaultDtoInputtext.setBackground(new Color(255, 204, 204));
            return false;
        }

    }

    private void initListBoxs() {
        String path = String.format("%s/dto/", this.outpathTextField.getText());
        List<String> scanClasses = CommonUtils.scanClasses(path, new String[]{"Example"});
        scanListModel.clear();
        selectionListModel.clear();
        for (String str : scanClasses) {
            scanListModel.addElement(str);
        }
        selectionList.setModel(selectionListModel);
        scanList.setModel(scanListModel);
    }

}
