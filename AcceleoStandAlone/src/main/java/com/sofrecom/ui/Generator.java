/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sofrecom.ui;

import com.sofrecom.ui.resources.ResourceHandler;
import java.awt.Component;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.mybatis.generator.api.MyBatisGenerator;
import org.mybatis.generator.config.xml.ConfigurationParser;
import org.mybatis.generator.exception.InvalidConfigurationException;
import org.mybatis.generator.exception.XMLParserException;
import org.mybatis.generator.internal.DefaultShellCallback;

/**
 *
 * @author z.benrhouma
 */
public class Generator extends javax.swing.JInternalFrame {

    final Configuration configuration = new Configuration(rootPane);
    private static Component Handler;

    public Generator() {
        initComponents();
        checkAndInitResourceFiles();
        initHandler();
        loadUIConfiguration();

    }

    public final void initHandler() {
        Handler = this;
    }

    public static Component getTopComponent() {
        return Handler;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        tableName = new javax.swing.JTextField();
        tableNamelabel = new javax.swing.JLabel();
        tableNamelabel1 = new javax.swing.JLabel();
        outpathTextField = new javax.swing.JTextField();
        cutomizeOutPathButton = new javax.swing.JButton();
        javaMappersPathTextField = new javax.swing.JTextField();
        tableNamelabel2 = new javax.swing.JLabel();
        javaModeltextField = new javax.swing.JTextField();
        tableNamelabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        generateFilesButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setClosable(true);
        setTitle("Mybatis Entities generator");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ExitKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ExitKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel2.setBackground(new java.awt.Color(255, 250, 250));
        jPanel2.setPreferredSize(new java.awt.Dimension(0, 50));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Generate Mappers and DTO(s) from Table Name");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2);

        jSeparator1.setPreferredSize(new java.awt.Dimension(1, 1));
        getContentPane().add(jSeparator1);

        tableNamelabel.setText("Table Name");

        tableNamelabel1.setText("output Path");

        cutomizeOutPathButton.setText("...");
        cutomizeOutPathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutomizeOutPathButtonActionPerformed(evt);
            }
        });

        tableNamelabel2.setText("Java Mappers");

        tableNamelabel3.setText("Java Model");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tableNamelabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tableNamelabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tableNamelabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tableNamelabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(outpathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
                            .addComponent(tableName, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cutomizeOutPathButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(javaMappersPathTextField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(javaModeltextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tableName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tableNamelabel)
                    .addComponent(cutomizeOutPathButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outpathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tableNamelabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(javaMappersPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tableNamelabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(javaModeltextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tableNamelabel3))
                .addGap(0, 104, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);

        jSeparator2.setPreferredSize(new java.awt.Dimension(1, 1));
        getContentPane().add(jSeparator2);

        jPanel3.setPreferredSize(new java.awt.Dimension(0, 50));

        generateFilesButton.setText("Generate Model");
        generateFilesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateFilesButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Annuler");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(495, Short.MAX_VALUE)
                .addComponent(generateFilesButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addGap(16, 16, 16))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateFilesButton)
                    .addComponent(cancelButton))
                .addGap(14, 14, 14))
        );

        getContentPane().add(jPanel3);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cutomizeOutPathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutomizeOutPathButtonActionPerformed

        final File directoryChoice = this.getDirectoryChoice(this, Configuration.getProperty(Configuration.LastUsedOutputpath), "Choose output directory");
        if (directoryChoice != null) {
            this.outpathTextField.setText(directoryChoice.getAbsolutePath());
        }

    }//GEN-LAST:event_cutomizeOutPathButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void loadUIConfiguration() {
        Configuration.loadConfiguration();
        this.tableName.setText(Configuration.getProperty(Configuration.LastUsedTableName));
        this.outpathTextField.setText(Configuration.getProperty(Configuration.TargetProjectPathField));
        this.javaModeltextField.setText(Configuration.getProperty(Configuration.JavaModelTargetPathField));
        this.javaMappersPathTextField.setText(Configuration.getProperty(Configuration.JavaClientTargetPathField));
    }

    private boolean isValidInput() {
        return true;
    }
    private void generateFilesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateFilesButtonActionPerformed
        if (isValidInput()) {
            try {
                Configuration.setProperty(Configuration.TargetProjectPathField, outpathTextField.getText());
                Configuration.setProperty(Configuration.LastUsedTableName, tableName.getText());
                Configuration.setProperty(Configuration.JavaClientTargetPathField, javaMappersPathTextField.getText());
                Configuration.setProperty(Configuration.JavaModelTargetPathField, javaModeltextField.getText());
                Configuration.saveConfiguration();
                MybatisGenXmlHandler mybatisGenXmlHandler = new MybatisGenXmlHandler(tableName.getText());
                mybatisGenXmlHandler.generateMybatisXmlConfiguration();
                genearteXmlFile();
                JOptionPane.showMessageDialog(Handler, "Operation terminated successfully");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(Handler, ex.getMessage(), "Validation error", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Generator.class.getName()).log(Level.SEVERE, null, ex);
            } catch (XMLParserException | InvalidConfigurationException | SQLException | InterruptedException ex) {
                JOptionPane.showMessageDialog(Handler, ex.getMessage(), "File generation error", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Generator.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(Handler, "Not a valid input please verify that there is no empty fields", "Validation error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_generateFilesButtonActionPerformed


    private void ExitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ExitKeyPressed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_ExitKeyPressed
    /**
     * this dialog is used to specify the output directory of generated files
     *
     * @param owner : used to center the dialog
     * @param defaultDirectory : as its name say
     * @param title : title of the choose dialog
     * @return
     */
    public File getDirectoryChoice(Component owner, String defaultDirectory,
            String title) {

        final SecurityManager sm = System.getSecurityManager();
        final JFileChooser chooser = new JFileChooser();
        File choiceFile = null;

        System.setSecurityManager(null);
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        File defaultDir = new File(defaultDirectory);
        if (defaultDir.exists() && defaultDir.isDirectory()) {
            chooser.setCurrentDirectory(defaultDir);
            chooser.setSelectedFile(defaultDir);
        }
        chooser.setDialogTitle(title);
        chooser.setApproveButtonText("OK");
        int choice = chooser.showOpenDialog(owner);
        owner.requestFocus();
        switch (choice) {
            case JFileChooser.APPROVE_OPTION:
                if (chooser.getSelectedFile() != null) {
                    if (chooser.getSelectedFile().exists()) {
                        choiceFile = chooser.getSelectedFile();
                        Configuration.setProperty(Configuration.LastUsedOutputpath, choiceFile.getAbsolutePath());
                    } else {
                        File parentFile = new File(chooser.getSelectedFile().getParent());
                        choiceFile = parentFile;
                    }
                }
                break;
            case JFileChooser.CANCEL_OPTION:
            case JFileChooser.ERROR_OPTION:
        }
        chooser.removeAll();
        System.setSecurityManager(sm);

        return choiceFile;
    }

    private static void genearteXmlFile() throws IOException, XMLParserException, InvalidConfigurationException, SQLException, InterruptedException {
        List<String> warnings = new ArrayList<>();
        boolean overwrite = true;
        File configFile = new File(Configuration.XMLTemplate);
        ConfigurationParser cp = new ConfigurationParser(warnings);
        org.mybatis.generator.config.Configuration parseConfiguration = cp.parseConfiguration(configFile);
        DefaultShellCallback callback = new DefaultShellCallback(overwrite);
        MyBatisGenerator myBatisGenerator = new MyBatisGenerator(parseConfiguration, callback, warnings);
        myBatisGenerator.generate(null);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton cutomizeOutPathButton;
    private javax.swing.JButton generateFilesButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField javaMappersPathTextField;
    private javax.swing.JTextField javaModeltextField;
    private javax.swing.JTextField outpathTextField;
    private javax.swing.JTextField tableName;
    private javax.swing.JLabel tableNamelabel;
    private javax.swing.JLabel tableNamelabel1;
    private javax.swing.JLabel tableNamelabel2;
    private javax.swing.JLabel tableNamelabel3;
    // End of variables declaration//GEN-END:variables
    /**
     * Check if configuration files exists and create them if the dont exists
     */
    private void checkAndInitResourceFiles() {
        final File configFile = new File(Configuration.ConfigurationPathFile);
        final File xmltemplateFile = new File(Configuration.XMLTemplate);
        if (!configFile.exists()) {
            try {
                URL resource = ResourceHandler.class.getResource("conf.properties");
                saveFile(resource, Configuration.ConfigurationPathFile);

            } catch (IOException ex) {
                Logger.getLogger(Generator.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        if (!xmltemplateFile.exists()) {
            try {
                URL resource = ResourceHandler.class.getResource("generatorConfig.xml");
                saveFile(resource, Configuration.XMLTemplate);

            } catch (IOException ex) {
                Logger.getLogger(Generator.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }
    /**
     *  This method is used to copy configuration files from inside the deployed jar and create new ones if they dont exists
     * @param url 
     * @param destinationFile
     * @throws IOException 
     */
    private void saveFile(URL url, String destinationFile) throws IOException {
        OutputStream os;
        try (InputStream is = url.openStream()) {
            os = new FileOutputStream(destinationFile);
            byte[] b = new byte[2048];
            int length;
            while ((length = is.read(b)) != -1) {
                os.write(b, 0, length);
            }
        }
        os.close();
    }

}
